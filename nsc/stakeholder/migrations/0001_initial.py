# Generated by Django 2.2.11 on 2021-02-01 11:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("policy", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Stakeholder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, verbose_name="stakeholder name"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "PROFESSIONAL",
                                "Royal College or other professional organisation",
                            ),
                            ("ACADEMIC", "Academic/research organisation"),
                            ("PATIENT_GROUP", "Patient group/voluntary sector"),
                            ("INDIVIDUAL", "Individual"),
                            ("COMMERCIAL", "Commercial organisation"),
                            ("OTHER", "Other"),
                        ],
                        max_length=13,
                        verbose_name="stakeholder type",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("ENGLAND", "England"),
                            ("NORTHERN_IRELAND", "Northern Ireland"),
                            ("SCOTLAND", "Scotland"),
                            ("WALES", "Wales"),
                            ("UK", "UK"),
                            ("INTERNATIONAL", "International"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "url",
                    models.URLField(blank=True, max_length=256, verbose_name="url"),
                ),
                (
                    "twitter",
                    models.URLField(blank=True, max_length=256, verbose_name="twitter"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        verbose_name="Should this organisation be published on the condition pages",
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Additional comments (for internal use only)",
                    ),
                ),
                (
                    "policies",
                    models.ManyToManyField(
                        related_name="stakeholders",
                        to="policy.Policy",
                        verbose_name="policies",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "stakeholders",
                "ordering": ("name", "pk"),
            },
        ),
        migrations.CreateModel(
            name="HistoricalStakeholder",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, verbose_name="stakeholder name"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "PROFESSIONAL",
                                "Royal College or other professional organisation",
                            ),
                            ("ACADEMIC", "Academic/research organisation"),
                            ("PATIENT_GROUP", "Patient group/voluntary sector"),
                            ("INDIVIDUAL", "Individual"),
                            ("COMMERCIAL", "Commercial organisation"),
                            ("OTHER", "Other"),
                        ],
                        max_length=13,
                        verbose_name="stakeholder type",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("ENGLAND", "England"),
                            ("NORTHERN_IRELAND", "Northern Ireland"),
                            ("SCOTLAND", "Scotland"),
                            ("WALES", "Wales"),
                            ("UK", "UK"),
                            ("INTERNATIONAL", "International"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "url",
                    models.URLField(blank=True, max_length=256, verbose_name="url"),
                ),
                (
                    "twitter",
                    models.URLField(blank=True, max_length=256, verbose_name="twitter"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        verbose_name="Should this organisation be published on the condition pages",
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Additional comments (for internal use only)",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical stakeholder",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
